#!/usr/bin/python3

import sys
import math
import random


def gcd(a, b):
    """
    Compute the greatest common divisor (GCD) of two numbers.

    Args:
        a (int): The first number.
        b (int): The second number.

    Returns:
        int: The GCD of a and b.
    """
    while b:
        a, b = b, a % b
    return a


def pollards_rho(n):
    """
    Pollard's Rho algorithm to find a non-trivial factor of n.

    Args:
        n (int): The number to be factorized.

    Returns:
        int: A non-trivial factor of n.
    """
    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    while d == 1:
        x = (x**2 + c) % n
        y = (y**2 + c) % n
        y = (y**2 + c) % n
        d = gcd(abs(x - y), n)

    return d


if len(sys.argv) != 2:
    print("Usage: rsa <file>")
    sys.exit(1)

input_file = sys.argv[1]

try:
    with open(input_file, "r") as file:
        for line in file:
            n = int(line.strip())
            p = pollards_rho(n)
            q = n // p
            print(f"{n}={p}*{q}")

except FileNotFoundError:
    print(f"Error: File '{input_file}' not found.")
    sys.exit(1)
except ValueError:
    print("Error: Invalid input in the file.")
    sys.exit(1)
